{
  "title": "Rust Is The Future of JavaScript Infrastructure",
  "publishedAt": "Nov 11, 2021",
  "summary": "Why is Rust being used to replace parts of the JavaScript web ecosystem like minification (Terser), transpilation (Babel), formatting (Prettier), bundling (webpack), linting (ESLint), and more?",
  "body": {
    "raw": "\n[Rust](https://www.rust-lang.org/) is a fast, reliable, and memory-efficient programming language. It's been voted the most loved programming language [six](https://insights.stackoverflow.com/survey/2016#technology-most-loved-dreaded-and-wanted) [years](https://insights.stackoverflow.com/survey/2017#most-loved-dreaded-and-wanted) [in](https://insights.stackoverflow.com/survey/2018#technology-_-most-loved-dreaded-and-wanted-languages) [a](https://insights.stackoverflow.com/survey/2019#technology-_-most-loved-dreaded-and-wanted-languages) [row](https://insights.stackoverflow.com/survey/2020#most-loved-dreaded-and-wanted) ([survey](https://insights.stackoverflow.com/survey/2021/#technology-most-loved-dreaded-and-wanted)). Created by Mozilla, it's now used at [Facebook](https://engineering.fb.com/2021/04/29/developer-tools/rust/), [Apple](https://twitter.com/oskargroth/status/1301502690409709568), [Amazon](https://aws.amazon.com/blogs/opensource/why-aws-loves-rust-and-how-wed-like-to-help/), [Microsoft](https://twitter.com/ryan_levick/status/1171830191804551168), and [Google](https://security.googleblog.com/2021/04/rust-in-android-platform.html) for systems infrastructure, encryption, virtualization, and more low-level programming.\n\nWhy is Rust now being used to replace parts of the JavaScript web ecosystem like minification (Terser), transpilation (Babel), formatting (Prettier), bundling (webpack), linting (ESLint), and more?\n\n> Note: This post is also available in [Chinese](https://mp.weixin.qq.com/s?__biz=MzkxNDIzNTg4MA==&mid=2247485792&idx=1&sn=682a4dee7ce4d3b47a81baf9ebd7a98a&chksm=c170c1e7f60748f17585d6bfca0cff6edbf71bab95f0a4a1ea0bcf2d43c16d1722666d9fadc1&token=1766743281&lang=zh_CN#rd), [Portuguese](https://codigofonte.com.br/artigos/rust-e-o-futuro-da-infraestrutura-javascript), [Vietnamese](https://www.alanphan.xyz/vi/rush), and [Arabic](https://www.tutomena.com/rust-and-javascript/).\n\n## What is Rust?\n\nRust helps developers write fast software that's memory-efficient. It's a modern replacement for languages like C++ or C with a focus on code safety and concise syntax.\n\nRust is quite different than JavaScript. JavaScript tries to find variables or objects not in use and automatically clears them from memory. This is called [Garbage Collection](<https://en.wikipedia.org/wiki/Garbage_collection_(computer_science)>). The language abstracts the developer from thinking about manual memory management.\n\nWith Rust, developers have more control over memory allocation, without it being as painful as C++.\n\n> Rust uses a relatively unique memory management approach that incorporates the idea of memory “ownership”. Basically, Rust keeps track of who can read and write to memory. It knows when the program is using memory and immediately frees the memory once it is no longer needed. It enforces memory rules at compile time, making it virtually impossible to have runtime memory bugs. You do not need to manually keep track of memory. The compiler takes care of it. – [Discord](https://blog.discord.com/why-discord-is-switching-from-go-to-rust-a190bbca2b1f)\n\n## Adoption\n\nOn top of the companies mentioned above, Rust is also being used for popular open-source libraries like:\n\n- [Firecracker](https://github.com/firecracker-microvm/firecracker) (AWS)\n- [Bottlerocket](https://github.com/bottlerocket-os/bottlerocket) (AWS)\n- [Quiche](https://github.com/cloudflare/quiche) (Cloudflare)\n- [Neqo](https://github.com/mozilla/neqo) (Mozilla)\n\n> Rust has been a force multiplier for our team, and betting on Rust was one of the best decisions we made. More than performance, its ergonomics and focus on correctness has helped us tame sync's complexity. We can encode complex invariants about our system in the type system and have the compiler check them for us. – [Dropbox](https://dropbox.tech/infrastructure/rewriting-the-heart-of-our-sync-engine)\n\n## From JavaScript to Rust\n\nJavaScript is the most widely used programming language, operating on every device with a web browser. Over the past ten years, a massive ecosystem has been built around JavaScript:\n\n- **Webpack:** developers wanted to bundle multiple JavaScript files into one.\n- **Babel:** developers wanted to write modern JavaScript while supporting older browsers.\n- **Terser:** developers wanted to generate the smallest possible file sizes.\n- **Prettier:** developers wanted an opinionated code formatter that just worked.\n- **ESLint:** developers wanted to find issues with their code before deploying.\n\nMillions of lines of code have been written and even more bugs have been fixed to create the bedrock for shipping web applications of today. All of these tools are written with JavaScript or TypeScript. This has worked well, but we've reached peak optimization with JS. This has inspired a new class of tools, designed to drastically improve the performance of building for the web.\n\n### SWC\n\n[SWC](http://swc.rs/), created in 2017, is an extensible Rust-based platform for the next generation of fast developer tools. It's used by tools like Next.js, Parcel, and Deno, as well as companies like Vercel, ByteDance, Tencent, Shopify, and more.\n\nSWC can be used for compilation, minification, bundling, and more – and is designed to be extended. It's something you can call to perform code transformations (either built-in or custom). Running those transformations happens through higher-level tools like Next.js.\n\n### Deno\n\n[Deno](https://deno.land/), created in 2018, is a simple, modern, and secure runtime for JavaScript and TypeScript that uses [V8](https://v8.dev/) and is built with Rust. It's an attempt to replace Node.js, written by the original creators of Node.js. While it was created in 2018, it didn't hit [v1.0 until May 2020](https://deno.com/blog/v1).\n\nDeno's linter, code formatter, and docs generator are [built using SWC](https://twitter.com/devongovett/status/1369033422002389000).\n\n### esbuild\n\n[esbuild](https://esbuild.github.io/), created in January 2020, is a JavaScript bundler and minifier 10-100x faster than existing tools, written in Go.\n\n> I'm trying to create a build tool that A) works well for a given sweet spot of use cases (bundling JavaScript, TypeScript, and maybe CSS) and B) **resets the expectations of the community for what it means for a JavaScript build tool to be fast**. Our current tools are way too slow in my opinion. – Evan, Creator of esbuild ([Source](https://news.ycombinator.com/item?id=22336334))\n\nBuilding JavaScript tooling with systems programming languages, like Go and Rust, was fairly niche until esbuild was released. In my opinion, esbuild sparked a wider interest in trying to make developer tools faster. Evan chose to use Go:\n\n> The Rust version probably could be made to work at an equivalent speed with enough effort. But at a high level, Go was much more enjoyable to work with. This is a side project and it has to be fun for me to work on it. – Evan, Creator of esbuild ([Source](https://news.ycombinator.com/item?id=22336284))\n\nSome argue Rust could perform better, but both could achieve Evan's original goal of influencing the community:\n\n> Even with just basic optimization, Rust was able to outperform the hyper hand-tuned Go version. This is a huge testament to how easy it is to write efficient programs with Rust compared to the deep dive we had to do with Go. – [Discord](https://blog.discord.com/why-discord-is-switching-from-go-to-rust-a190bbca2b1f)\n\n### Rome\n\n[Rome](https://rome.tools/blog/2020/08/08/introducing-rome), created in August 2020, is a linter, compiler, bundler, test runner, and more, for JavaScript, TypeScript, HTML, JSON, Markdown, and CSS. They aim to replace and unify the entire frontend development toolchain. It's created by [Sebastian](https://twitter.com/sebmck), who also created Babel.\n\nWhy rewrite everything, then?\n\n> Making the necessary modifications to Babel to allow for it to be a reliable base for other tools would have required changes to absolutely everything. The architecture is bound to the initial design choices I made in 2014 when I was learning about parsers, ASTs, and compilers. - Sebastian ([Source](https://rome.tools/blog/2020/08/08/introducing-rome))\n\nRome is currently written in TypeScript and runs on Node.js. But they're now working on [rewriting in Rust](https://rome.tools/blog/2021/09/21/rome-will-be-rewritten-in-rust) using RSLint parser and their own visitor system for AST traversal.\n\n### NAPI\n\nRust's integration with Node.js is better than other low-level languages.\n\n[napi-rs](https://napi.rs/) allows you to build pre-compiled Node.js add-ons with Rust. It provides an out-of-the-box solution for cross-compilation and publishing native binaries to NPM, without needing `node-gyp` or `postinstall` scripts.\n\nYou can build a Rust module that can be called directly from Node.js, without needing to create a child process like esbuild.\n\n## Rust + WebAssembly\n\n[WebAssembly](https://webassembly.org/docs/use-cases/) *(*WASM*)* is a portable low-level language that Rust can compile to. It runs in the browser, is interoperable with JavaScript, and is supported in all major modern browsers.\n\n> WASM is definitely a lot faster than JS, but not quite native speed. In our tests, Parcel runs 10-20x slower when compiled to WASM than with native binaries. – [Devon Govett](https://twitter.com/devongovett)\n\nWhile WASM isn't the perfect solution yet, it _can_ help developers create extremely fast web experiences. The Rust team is [committed](https://www.rust-lang.org/what/wasm) to a high-quality and cutting-edge WASM implementation. For developers, this means you could have the performance advantages of Rust (vs. Go) while still compiling for the web (using WASM).\n\nSome early libraries and frameworks in this space:\n\n- [Yew](https://yew.rs/)\n- [Percy](https://github.com/chinedufn/percy)\n- [Seed](https://github.com/seed-rs/seed)\n- [Sycamore](https://github.com/sycamore-rs/sycamore)\n- [Stork](https://stork-search.net/)\n\nThese Rust-based web frameworks that compile to WASM aren't trying to replace JavaScript, but work alongside it. While we aren't there yet, it's interesting to see Rust coming after the web on both sides: **making existing JavaScript tooling faster** _and_ **future-forward ideas for [compiling to WASM](https://rustwasm.github.io/docs/book/introduction.html)**.\n\nIt's Rust all the way down.\n\n## Why Not Rust?\n\nRust has a steep learning curve. It's a lower level of abstraction than what most web developers are used to.\n\nOnce you're on native code (through Rust, Go, Zig, or other low-level languages),\nthe algorithms and data structures are [more important](https://twitter.com/devongovett/status/1457945506332692482) than the language choice. It's not a silver bullet.\n\n> Rust makes you think about dimensions of your code that matter tremendously for systems programming. It makes you think about how memory is shared or copied. It makes you think about real but unlikely corner cases and make sure that they're handled. It helps you write code that's incredibly efficient in every possible way. – Tom MacWright ([Source](https://macwright.com/2021/01/15/rust.html))\n\nFurther, Rust's usage in the web community is still niche. It hasn't reached critical adoption. Even though learning Rust for JavaScript tooling will be a barrier to entry, interestingly developers would rather have a [faster tool that's harder to contribute to](https://twitter.com/devongovett/status/1261379312898306048). [Fast software wins](https://craigmod.com/essays/fast_software/).\n\nCurrently, it's hard to find a Rust library or framework for your favorite services (things like working with authentication, databases, payments, and more). I do think that once Rust and WASM reach critical adoption, this will resolve itself. But not yet. **We need existing JavaScript tools to help us bridge the gap and incrementally adopt performance improvements**.\n\n## The Future of JavaScript Tooling\n\nI believe Rust is the future of JavaScript tooling. [Next.js 12](http://nextjs.org/12) started our transition to fully replace Babel (transpilation) and Terser (minification) with SWC and Rust. Why?\n\n- **Extensibility:** SWC can be used as a Crate inside Next.js, without having to fork the library or workaround design constraints.\n- **Performance:** We were able to achieve ~3x faster Fast Refresh and ~5x faster builds in Next.js by switching to SWC, with more room for optimization still in progress.\n- **WebAssembly:** Rust's support for WASM is essential for supporting all possible platforms and taking Next.js development everywhere.\n- **Community:** The Rust community and ecosystem are amazing and only growing.\n\nIt's not just Next.js adopting SWC, either:\n\n- [Deno's](https://deno.land/) linter, code formatter, and docs generator are [built using SWC](https://twitter.com/devongovett/status/1369033422002389000).\n- [dprint](https://github.com/devongovett/dprint-node), built on SWC, is a [30x faster](https://twitter.com/devongovett/status/1400138335721455617) code formatting replacement for Prettier.\n- [Parcel](https://parceljs.org/) improved overall build performance by [up to 10x](https://v2.parceljs.org/blog/beta3/) with SWC.\n\n> Parcel uses SWC like a library. Before we used Babel's parser and custom transforms written in JS. Now, we use SWC's parser and [custom transforms in Rust](https://github.com/parcel-bundler/parcel/tree/v2/packages/transformers/js/core/src). This includes a full scope hoisting implementation, dependency collection, and more. It's similar in scope to how Deno built on top of SWC. – [Devon Govett](https://twitter.com/devongovett)\n\nIt's early days for Rust – a few important pieces are still being figured out:\n\n- **Plugins:** Writing plugins in Rust isn't as approachable for many JavaScript developers. At the same time, exposing a plugin system in JavaScript could negate performance gains. A definitive solution hasn't emerged yet. Ideally, the future combines both JavaScript and Rust. If you want to write a plugin with JavaScript, it's possible with a tradeoff for speed. Need more performance? Use the Rust plugin API.\n- **Bundling:** One interesting area of development is `swcpack`, which is SWC's replacement for Webpack. It's still under development but could be very promising.\n- **WebAssembly:** As mentioned above, the prospect of writing Rust and compiling to WASM is enticing, but there's still work to be done.\n\n<Callout emoji=\"💡\">\n\n**Update 2023:** [Turbopack](https://turbo.build/pack) has been released, the Rust-powered successor to Webpack.\n\n</Callout>\n\nRegardless, I'm confident Rust will continue to have a major impact on the JavaScript ecosystem for the next 1-2 years and into the future. Imagine a world where all of the build tools used in Next.js are written in Rust, giving you optimal performance. Then, Next.js could be distributed as a [static binary](https://en.wikipedia.org/wiki/Static_build) you'd download from NPM.\n\nThat's the world I want to live (and develop) in.\n\n---\n\n_Thanks to [Devon Govett](https://twitter.com/devongovett) for reviewing an early draft of this article._\n",
    "code": "var Component=(()=>{var an=Object.create;var A=Object.defineProperty;var sn=Object.getOwnPropertyDescriptor;var cn=Object.getOwnPropertyNames;var fn=Object.getPrototypeOf,mn=Object.prototype.hasOwnProperty;var z=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),bn=(a,e)=>{for(var m in e)A(a,m,{get:e[m],enumerable:!0})},xe=(a,e,m,N)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let y of cn(e))!mn.call(a,y)&&y!==m&&A(a,y,{get:()=>e[y],enumerable:!(N=sn(e,y))||N.enumerable});return a};var hn=(a,e,m)=>(m=a!=null?an(fn(a)):{},xe(e||!a||!a.__esModule?A(m,\"default\",{value:a,enumerable:!0}):m,a)),pn=a=>xe(A({},\"__esModule\",{value:!0}),a);var we=z((wn,ve)=>{ve.exports=React});var Ue=z(L=>{\"use strict\";(function(){\"use strict\";var a=we(),e=Symbol.for(\"react.element\"),m=Symbol.for(\"react.portal\"),N=Symbol.for(\"react.fragment\"),y=Symbol.for(\"react.strict_mode\"),G=Symbol.for(\"react.profiler\"),X=Symbol.for(\"react.provider\"),H=Symbol.for(\"react.context\"),S=Symbol.for(\"react.forward_ref\"),O=Symbol.for(\"react.suspense\"),I=Symbol.for(\"react.suspense_list\"),E=Symbol.for(\"react.memo\"),D=Symbol.for(\"react.lazy\"),Ee=Symbol.for(\"react.offscreen\"),K=Symbol.iterator,Te=\"@@iterator\";function Ce(n){if(n===null||typeof n!=\"object\")return null;var t=K&&n[K]||n[Te];return typeof t==\"function\"?t:null}var v=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function b(n){{for(var t=arguments.length,d=new Array(t>1?t-1:0),i=1;i<t;i++)d[i-1]=arguments[i];je(\"error\",n,d)}}function je(n,t,d){{var i=v.ReactDebugCurrentFrame,l=i.getStackAddendum();l!==\"\"&&(t+=\"%s\",d=d.concat([l]));var s=d.map(function(u){return String(u)});s.unshift(\"Warning: \"+t),Function.prototype.apply.call(console[n],console,s)}}var Pe=!1,We=!1,Ae=!1,Oe=!1,Ie=!1,Z;Z=Symbol.for(\"react.module.reference\");function De(n){return!!(typeof n==\"string\"||typeof n==\"function\"||n===N||n===G||Ie||n===y||n===O||n===I||Oe||n===Ee||Pe||We||Ae||typeof n==\"object\"&&n!==null&&(n.$$typeof===D||n.$$typeof===E||n.$$typeof===X||n.$$typeof===H||n.$$typeof===S||n.$$typeof===Z||n.getModuleId!==void 0))}function Fe(n,t,d){var i=n.displayName;if(i)return i;var l=t.displayName||t.name||\"\";return l!==\"\"?d+\"(\"+l+\")\":d}function Q(n){return n.displayName||\"Context\"}function _(n){if(n==null)return null;if(typeof n.tag==\"number\"&&b(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"),typeof n==\"function\")return n.displayName||n.name||null;if(typeof n==\"string\")return n;switch(n){case N:return\"Fragment\";case m:return\"Portal\";case G:return\"Profiler\";case y:return\"StrictMode\";case O:return\"Suspense\";case I:return\"SuspenseList\"}if(typeof n==\"object\")switch(n.$$typeof){case H:var t=n;return Q(t)+\".Consumer\";case X:var d=n;return Q(d._context)+\".Provider\";case S:return Fe(n,n.render,\"ForwardRef\");case E:var i=n.displayName||null;return i!==null?i:_(n.type)||\"Memo\";case D:{var l=n,s=l._payload,u=l._init;try{return _(u(s))}catch{return null}}}return null}var x=Object.assign,k=0,ee,ne,re,te,de,ie,oe;function ue(){}ue.__reactDisabledLog=!0;function Me(){{if(k===0){ee=console.log,ne=console.info,re=console.warn,te=console.error,de=console.group,ie=console.groupCollapsed,oe=console.groupEnd;var n={configurable:!0,enumerable:!0,value:ue,writable:!0};Object.defineProperties(console,{info:n,log:n,warn:n,error:n,group:n,groupCollapsed:n,groupEnd:n})}k++}}function Je(){{if(k--,k===0){var n={configurable:!0,enumerable:!0,writable:!0};Object.defineProperties(console,{log:x({},n,{value:ee}),info:x({},n,{value:ne}),warn:x({},n,{value:re}),error:x({},n,{value:te}),group:x({},n,{value:de}),groupCollapsed:x({},n,{value:ie}),groupEnd:x({},n,{value:oe})})}k<0&&b(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\")}}var F=v.ReactCurrentDispatcher,M;function T(n,t,d){{if(M===void 0)try{throw Error()}catch(l){var i=l.stack.trim().match(/\\n( *(at )?)/);M=i&&i[1]||\"\"}return`\n`+M+n}}var J=!1,C;{var qe=typeof WeakMap==\"function\"?WeakMap:Map;C=new qe}function le(n,t){if(!n||J)return\"\";{var d=C.get(n);if(d!==void 0)return d}var i;J=!0;var l=Error.prepareStackTrace;Error.prepareStackTrace=void 0;var s;s=F.current,F.current=null,Me();try{if(t){var u=function(){throw Error()};if(Object.defineProperty(u.prototype,\"props\",{set:function(){throw Error()}}),typeof Reflect==\"object\"&&Reflect.construct){try{Reflect.construct(u,[])}catch(g){i=g}Reflect.construct(n,[],u)}else{try{u.call()}catch(g){i=g}n.call(u.prototype)}}else{try{throw Error()}catch(g){i=g}n()}}catch(g){if(g&&i&&typeof g.stack==\"string\"){for(var o=g.stack.split(`\n`),h=i.stack.split(`\n`),c=o.length-1,f=h.length-1;c>=1&&f>=0&&o[c]!==h[f];)f--;for(;c>=1&&f>=0;c--,f--)if(o[c]!==h[f]){if(c!==1||f!==1)do if(c--,f--,f<0||o[c]!==h[f]){var p=`\n`+o[c].replace(\" at new \",\" at \");return n.displayName&&p.includes(\"<anonymous>\")&&(p=p.replace(\"<anonymous>\",n.displayName)),typeof n==\"function\"&&C.set(n,p),p}while(c>=1&&f>=0);break}}}finally{J=!1,F.current=s,Je(),Error.prepareStackTrace=l}var U=n?n.displayName||n.name:\"\",Ne=U?T(U):\"\";return typeof n==\"function\"&&C.set(n,Ne),Ne}function Be(n,t,d){return le(n,!1)}function Ye(n){var t=n.prototype;return!!(t&&t.isReactComponent)}function j(n,t,d){if(n==null)return\"\";if(typeof n==\"function\")return le(n,Ye(n));if(typeof n==\"string\")return T(n);switch(n){case O:return T(\"Suspense\");case I:return T(\"SuspenseList\")}if(typeof n==\"object\")switch(n.$$typeof){case S:return Be(n.render);case E:return j(n.type,t,d);case D:{var i=n,l=i._payload,s=i._init;try{return j(s(l),t,d)}catch{}}}return\"\"}var P=Object.prototype.hasOwnProperty,ae={},se=v.ReactDebugCurrentFrame;function W(n){if(n){var t=n._owner,d=j(n.type,n._source,t?t.type:null);se.setExtraStackFrame(d)}else se.setExtraStackFrame(null)}function Ve(n,t,d,i,l){{var s=Function.call.bind(P);for(var u in n)if(s(n,u)){var o=void 0;try{if(typeof n[u]!=\"function\"){var h=Error((i||\"React class\")+\": \"+d+\" type `\"+u+\"` is invalid; it must be a function, usually from the `prop-types` package, but received `\"+typeof n[u]+\"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");throw h.name=\"Invariant Violation\",h}o=n[u](t,u,i,d,null,\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\")}catch(c){o=c}o&&!(o instanceof Error)&&(W(l),b(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\",i||\"React class\",d,u,typeof o),W(null)),o instanceof Error&&!(o.message in ae)&&(ae[o.message]=!0,W(l),b(\"Failed %s type: %s\",d,o.message),W(null))}}}var $e=Array.isArray;function q(n){return $e(n)}function ze(n){{var t=typeof Symbol==\"function\"&&Symbol.toStringTag,d=t&&n[Symbol.toStringTag]||n.constructor.name||\"Object\";return d}}function Le(n){try{return ce(n),!1}catch{return!0}}function ce(n){return\"\"+n}function fe(n){if(Le(n))return b(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\",ze(n)),ce(n)}var R=v.ReactCurrentOwner,Ge={key:!0,ref:!0,__self:!0,__source:!0},me,be,B;B={};function Xe(n){if(P.call(n,\"ref\")){var t=Object.getOwnPropertyDescriptor(n,\"ref\").get;if(t&&t.isReactWarning)return!1}return n.ref!==void 0}function He(n){if(P.call(n,\"key\")){var t=Object.getOwnPropertyDescriptor(n,\"key\").get;if(t&&t.isReactWarning)return!1}return n.key!==void 0}function Ke(n,t){if(typeof n.ref==\"string\"&&R.current&&t&&R.current.stateNode!==t){var d=_(R.current.type);B[d]||(b('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',_(R.current.type),n.ref),B[d]=!0)}}function Ze(n,t){{var d=function(){me||(me=!0,b(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",t))};d.isReactWarning=!0,Object.defineProperty(n,\"key\",{get:d,configurable:!0})}}function Qe(n,t){{var d=function(){be||(be=!0,b(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",t))};d.isReactWarning=!0,Object.defineProperty(n,\"ref\",{get:d,configurable:!0})}}var en=function(n,t,d,i,l,s,u){var o={$$typeof:e,type:n,key:t,ref:d,props:u,_owner:s};return o._store={},Object.defineProperty(o._store,\"validated\",{configurable:!1,enumerable:!1,writable:!0,value:!1}),Object.defineProperty(o,\"_self\",{configurable:!1,enumerable:!1,writable:!1,value:i}),Object.defineProperty(o,\"_source\",{configurable:!1,enumerable:!1,writable:!1,value:l}),Object.freeze&&(Object.freeze(o.props),Object.freeze(o)),o};function nn(n,t,d,i,l){{var s,u={},o=null,h=null;d!==void 0&&(fe(d),o=\"\"+d),He(t)&&(fe(t.key),o=\"\"+t.key),Xe(t)&&(h=t.ref,Ke(t,l));for(s in t)P.call(t,s)&&!Ge.hasOwnProperty(s)&&(u[s]=t[s]);if(n&&n.defaultProps){var c=n.defaultProps;for(s in c)u[s]===void 0&&(u[s]=c[s])}if(o||h){var f=typeof n==\"function\"?n.displayName||n.name||\"Unknown\":n;o&&Ze(u,f),h&&Qe(u,f)}return en(n,o,h,l,i,R.current,u)}}var Y=v.ReactCurrentOwner,he=v.ReactDebugCurrentFrame;function w(n){if(n){var t=n._owner,d=j(n.type,n._source,t?t.type:null);he.setExtraStackFrame(d)}else he.setExtraStackFrame(null)}var V;V=!1;function $(n){return typeof n==\"object\"&&n!==null&&n.$$typeof===e}function pe(){{if(Y.current){var n=_(Y.current.type);if(n)return`\n\nCheck the render method of \\``+n+\"`.\"}return\"\"}}function rn(n){{if(n!==void 0){var t=n.fileName.replace(/^.*[\\\\\\/]/,\"\"),d=n.lineNumber;return`\n\nCheck your code at `+t+\":\"+d+\".\"}return\"\"}}var _e={};function tn(n){{var t=pe();if(!t){var d=typeof n==\"string\"?n:n.displayName||n.name;d&&(t=`\n\nCheck the top-level render call using <`+d+\">.\")}return t}}function ge(n,t){{if(!n._store||n._store.validated||n.key!=null)return;n._store.validated=!0;var d=tn(t);if(_e[d])return;_e[d]=!0;var i=\"\";n&&n._owner&&n._owner!==Y.current&&(i=\" It was passed a child from \"+_(n._owner.type)+\".\"),w(n),b('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',d,i),w(null)}}function ye(n,t){{if(typeof n!=\"object\")return;if(q(n))for(var d=0;d<n.length;d++){var i=n[d];$(i)&&ge(i,t)}else if($(n))n._store&&(n._store.validated=!0);else if(n){var l=Ce(n);if(typeof l==\"function\"&&l!==n.entries)for(var s=l.call(n),u;!(u=s.next()).done;)$(u.value)&&ge(u.value,t)}}}function dn(n){{var t=n.type;if(t==null||typeof t==\"string\")return;var d;if(typeof t==\"function\")d=t.propTypes;else if(typeof t==\"object\"&&(t.$$typeof===S||t.$$typeof===E))d=t.propTypes;else return;if(d){var i=_(t);Ve(d,n.props,\"prop\",i,n)}else if(t.PropTypes!==void 0&&!V){V=!0;var l=_(t);b(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\",l||\"Unknown\")}typeof t.getDefaultProps==\"function\"&&!t.getDefaultProps.isReactClassApproved&&b(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\")}}function on(n){{for(var t=Object.keys(n.props),d=0;d<t.length;d++){var i=t[d];if(i!==\"children\"&&i!==\"key\"){w(n),b(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\",i),w(null);break}}n.ref!==null&&(w(n),b(\"Invalid attribute `ref` supplied to `React.Fragment`.\"),w(null))}}function un(n,t,d,i,l,s){{var u=De(n);if(!u){var o=\"\";(n===void 0||typeof n==\"object\"&&n!==null&&Object.keys(n).length===0)&&(o+=\" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\");var h=rn(l);h?o+=h:o+=pe();var c;n===null?c=\"null\":q(n)?c=\"array\":n!==void 0&&n.$$typeof===e?(c=\"<\"+(_(n.type)||\"Unknown\")+\" />\",o=\" Did you accidentally export a JSX literal instead of a component?\"):c=typeof n,b(\"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\",c,o)}var f=nn(n,t,d,l,s);if(f==null)return f;if(u){var p=t.children;if(p!==void 0)if(i)if(q(p)){for(var U=0;U<p.length;U++)ye(p[U],n);Object.freeze&&Object.freeze(p)}else b(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");else ye(p,n)}return n===N?on(f):dn(f),f}}var ln=un;L.Fragment=N,L.jsxDEV=ln})()});var Re=z((kn,ke)=>{\"use strict\";ke.exports=Ue()});var xn={};bn(xn,{default:()=>yn,frontmatter:()=>_n});var r=hn(Re()),_n={title:\"Rust Is The Future of JavaScript Infrastructure\",publishedAt:\"Nov 11, 2021\",summary:\"Why is Rust being used to replace parts of the JavaScript web ecosystem like minification (Terser), transpilation (Babel), formatting (Prettier), bundling (webpack), linting (ESLint), and more?\"};function Se(a){let e=Object.assign({p:\"p\",a:\"a\",blockquote:\"blockquote\",h2:\"h2\",span:\"span\",ul:\"ul\",li:\"li\",strong:\"strong\",h3:\"h3\",code:\"code\",em:\"em\",hr:\"hr\"},a.components),{Callout:m}=e;return m||Nn(\"Callout\",!0,\"146:1-150:11\"),(0,r.jsxDEV)(r.Fragment,{children:[(0,r.jsxDEV)(e.p,{children:[(0,r.jsxDEV)(e.a,{href:\"https://www.rust-lang.org/\",children:\"Rust\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:7,columnNumber:1},this),\" is a fast, reliable, and memory-efficient programming language. It's been voted the most loved programming language \",(0,r.jsxDEV)(e.a,{href:\"https://insights.stackoverflow.com/survey/2016#technology-most-loved-dreaded-and-wanted\",children:\"six\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:7,columnNumber:152},this),\" \",(0,r.jsxDEV)(e.a,{href:\"https://insights.stackoverflow.com/survey/2017#most-loved-dreaded-and-wanted\",children:\"years\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:7,columnNumber:247},this),\" \",(0,r.jsxDEV)(e.a,{href:\"https://insights.stackoverflow.com/survey/2018#technology-_-most-loved-dreaded-and-wanted-languages\",children:\"in\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:7,columnNumber:333},this),\" \",(0,r.jsxDEV)(e.a,{href:\"https://insights.stackoverflow.com/survey/2019#technology-_-most-loved-dreaded-and-wanted-languages\",children:\"a\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:7,columnNumber:439},this),\" \",(0,r.jsxDEV)(e.a,{href:\"https://insights.stackoverflow.com/survey/2020#most-loved-dreaded-and-wanted\",children:\"row\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:7,columnNumber:544},this),\" (\",(0,r.jsxDEV)(e.a,{href:\"https://insights.stackoverflow.com/survey/2021/#technology-most-loved-dreaded-and-wanted\",children:\"survey\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:7,columnNumber:629},this),\"). Created by Mozilla, it's now used at \",(0,r.jsxDEV)(e.a,{href:\"https://engineering.fb.com/2021/04/29/developer-tools/rust/\",children:\"Facebook\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:7,columnNumber:767},this),\", \",(0,r.jsxDEV)(e.a,{href:\"https://twitter.com/oskargroth/status/1301502690409709568\",children:\"Apple\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:7,columnNumber:840},this),\", \",(0,r.jsxDEV)(e.a,{href:\"https://aws.amazon.com/blogs/opensource/why-aws-loves-rust-and-how-wed-like-to-help/\",children:\"Amazon\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:7,columnNumber:908},this),\", \",(0,r.jsxDEV)(e.a,{href:\"https://twitter.com/ryan_levick/status/1171830191804551168\",children:\"Microsoft\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:7,columnNumber:1004},this),\", and \",(0,r.jsxDEV)(e.a,{href:\"https://security.googleblog.com/2021/04/rust-in-android-platform.html\",children:\"Google\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:7,columnNumber:1081},this),\" for systems infrastructure, encryption, virtualization, and more low-level programming.\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:7,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:\"Why is Rust now being used to replace parts of the JavaScript web ecosystem like minification (Terser), transpilation (Babel), formatting (Prettier), bundling (webpack), linting (ESLint), and more?\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:9,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.blockquote,{children:[`\n`,(0,r.jsxDEV)(e.p,{children:[\"Note: This post is also available in \",(0,r.jsxDEV)(e.a,{href:\"https://mp.weixin.qq.com/s?__biz=MzkxNDIzNTg4MA==&mid=2247485792&idx=1&sn=682a4dee7ce4d3b47a81baf9ebd7a98a&chksm=c170c1e7f60748f17585d6bfca0cff6edbf71bab95f0a4a1ea0bcf2d43c16d1722666d9fadc1&token=1766743281&lang=zh_CN#rd\",children:\"Chinese\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:11,columnNumber:40},this),\", \",(0,r.jsxDEV)(e.a,{href:\"https://codigofonte.com.br/artigos/rust-e-o-futuro-da-infraestrutura-javascript\",children:\"Portuguese\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:11,columnNumber:273},this),\", \",(0,r.jsxDEV)(e.a,{href:\"https://www.alanphan.xyz/vi/rush\",children:\"Vietnamese\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:11,columnNumber:368},this),\", and \",(0,r.jsxDEV)(e.a,{href:\"https://www.tutomena.com/rust-and-javascript/\",children:\"Arabic\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:11,columnNumber:420},this),\".\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:11,columnNumber:3},this),`\n`]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:11,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.h2,{id:\"what-is-rust\",children:[(0,r.jsxDEV)(e.a,{className:\"anchor\",href:\"#what-is-rust\",children:(0,r.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\"},this)},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\"},this),\"What is Rust?\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:13,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:\"Rust helps developers write fast software that's memory-efficient. It's a modern replacement for languages like C++ or C with a focus on code safety and concise syntax.\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:15,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:[\"Rust is quite different than JavaScript. JavaScript tries to find variables or objects not in use and automatically clears them from memory. This is called \",(0,r.jsxDEV)(e.a,{href:\"https://en.wikipedia.org/wiki/Garbage_collection_(computer_science)\",children:\"Garbage Collection\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:17,columnNumber:157},this),\". The language abstracts the developer from thinking about manual memory management.\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:17,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:\"With Rust, developers have more control over memory allocation, without it being as painful as C++.\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:19,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.blockquote,{children:[`\n`,(0,r.jsxDEV)(e.p,{children:[\"Rust uses a relatively unique memory management approach that incorporates the idea of memory \\u201Cownership\\u201D. Basically, Rust keeps track of who can read and write to memory. It knows when the program is using memory and immediately frees the memory once it is no longer needed. It enforces memory rules at compile time, making it virtually impossible to have runtime memory bugs. You do not need to manually keep track of memory. The compiler takes care of it. \\u2013 \",(0,r.jsxDEV)(e.a,{href:\"https://blog.discord.com/why-discord-is-switching-from-go-to-rust-a190bbca2b1f\",children:\"Discord\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:21,columnNumber:464},this)]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:21,columnNumber:3},this),`\n`]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:21,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.h2,{id:\"adoption\",children:[(0,r.jsxDEV)(e.a,{className:\"anchor\",href:\"#adoption\",children:(0,r.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\"},this)},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\"},this),\"Adoption\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:23,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:\"On top of the companies mentioned above, Rust is also being used for popular open-source libraries like:\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:25,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.ul,{children:[`\n`,(0,r.jsxDEV)(e.li,{children:[(0,r.jsxDEV)(e.a,{href:\"https://github.com/firecracker-microvm/firecracker\",children:\"Firecracker\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:27,columnNumber:3},this),\" (AWS)\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:27,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.li,{children:[(0,r.jsxDEV)(e.a,{href:\"https://github.com/bottlerocket-os/bottlerocket\",children:\"Bottlerocket\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:28,columnNumber:3},this),\" (AWS)\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:28,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.li,{children:[(0,r.jsxDEV)(e.a,{href:\"https://github.com/cloudflare/quiche\",children:\"Quiche\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:29,columnNumber:3},this),\" (Cloudflare)\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:29,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.li,{children:[(0,r.jsxDEV)(e.a,{href:\"https://github.com/mozilla/neqo\",children:\"Neqo\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:30,columnNumber:3},this),\" (Mozilla)\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:30,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:27,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.blockquote,{children:[`\n`,(0,r.jsxDEV)(e.p,{children:[\"Rust has been a force multiplier for our team, and betting on Rust was one of the best decisions we made. More than performance, its ergonomics and focus on correctness has helped us tame sync's complexity. We can encode complex invariants about our system in the type system and have the compiler check them for us. \\u2013 \",(0,r.jsxDEV)(e.a,{href:\"https://dropbox.tech/infrastructure/rewriting-the-heart-of-our-sync-engine\",children:\"Dropbox\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:32,columnNumber:322},this)]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:32,columnNumber:3},this),`\n`]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:32,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.h2,{id:\"from-javascript-to-rust\",children:[(0,r.jsxDEV)(e.a,{className:\"anchor\",href:\"#from-javascript-to-rust\",children:(0,r.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\"},this)},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\"},this),\"From JavaScript to Rust\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:34,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:\"JavaScript is the most widely used programming language, operating on every device with a web browser. Over the past ten years, a massive ecosystem has been built around JavaScript:\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:36,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.ul,{children:[`\n`,(0,r.jsxDEV)(e.li,{children:[(0,r.jsxDEV)(e.strong,{children:\"Webpack:\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:38,columnNumber:3},this),\" developers wanted to bundle multiple JavaScript files into one.\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:38,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.li,{children:[(0,r.jsxDEV)(e.strong,{children:\"Babel:\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:39,columnNumber:3},this),\" developers wanted to write modern JavaScript while supporting older browsers.\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:39,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.li,{children:[(0,r.jsxDEV)(e.strong,{children:\"Terser:\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:40,columnNumber:3},this),\" developers wanted to generate the smallest possible file sizes.\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:40,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.li,{children:[(0,r.jsxDEV)(e.strong,{children:\"Prettier:\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:41,columnNumber:3},this),\" developers wanted an opinionated code formatter that just worked.\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:41,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.li,{children:[(0,r.jsxDEV)(e.strong,{children:\"ESLint:\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:42,columnNumber:3},this),\" developers wanted to find issues with their code before deploying.\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:42,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:38,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:\"Millions of lines of code have been written and even more bugs have been fixed to create the bedrock for shipping web applications of today. All of these tools are written with JavaScript or TypeScript. This has worked well, but we've reached peak optimization with JS. This has inspired a new class of tools, designed to drastically improve the performance of building for the web.\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:44,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.h3,{id:\"swc\",children:[(0,r.jsxDEV)(e.a,{className:\"anchor\",href:\"#swc\",children:(0,r.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\"},this)},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\"},this),\"SWC\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:46,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:[(0,r.jsxDEV)(e.a,{href:\"http://swc.rs/\",children:\"SWC\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:48,columnNumber:1},this),\", created in 2017, is an extensible Rust-based platform for the next generation of fast developer tools. It's used by tools like Next.js, Parcel, and Deno, as well as companies like Vercel, ByteDance, Tencent, Shopify, and more.\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:48,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:\"SWC can be used for compilation, minification, bundling, and more \\u2013 and is designed to be extended. It's something you can call to perform code transformations (either built-in or custom). Running those transformations happens through higher-level tools like Next.js.\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:50,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.h3,{id:\"deno\",children:[(0,r.jsxDEV)(e.a,{className:\"anchor\",href:\"#deno\",children:(0,r.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\"},this)},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\"},this),\"Deno\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:52,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:[(0,r.jsxDEV)(e.a,{href:\"https://deno.land/\",children:\"Deno\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:54,columnNumber:1},this),\", created in 2018, is a simple, modern, and secure runtime for JavaScript and TypeScript that uses \",(0,r.jsxDEV)(e.a,{href:\"https://v8.dev/\",children:\"V8\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:54,columnNumber:126},this),\" and is built with Rust. It's an attempt to replace Node.js, written by the original creators of Node.js. While it was created in 2018, it didn't hit \",(0,r.jsxDEV)(e.a,{href:\"https://deno.com/blog/v1\",children:\"v1.0 until May 2020\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:54,columnNumber:297},this),\".\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:54,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:[\"Deno's linter, code formatter, and docs generator are \",(0,r.jsxDEV)(e.a,{href:\"https://twitter.com/devongovett/status/1369033422002389000\",children:\"built using SWC\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:56,columnNumber:55},this),\".\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:56,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.h3,{id:\"esbuild\",children:[(0,r.jsxDEV)(e.a,{className:\"anchor\",href:\"#esbuild\",children:(0,r.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\"},this)},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\"},this),\"esbuild\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:58,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:[(0,r.jsxDEV)(e.a,{href:\"https://esbuild.github.io/\",children:\"esbuild\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:60,columnNumber:1},this),\", created in January 2020, is a JavaScript bundler and minifier 10-100x faster than existing tools, written in Go.\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:60,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.blockquote,{children:[`\n`,(0,r.jsxDEV)(e.p,{children:[\"I'm trying to create a build tool that A) works well for a given sweet spot of use cases (bundling JavaScript, TypeScript, and maybe CSS) and B) \",(0,r.jsxDEV)(e.strong,{children:\"resets the expectations of the community for what it means for a JavaScript build tool to be fast\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:62,columnNumber:148},this),\". Our current tools are way too slow in my opinion. \\u2013 Evan, Creator of esbuild (\",(0,r.jsxDEV)(e.a,{href:\"https://news.ycombinator.com/item?id=22336334\",children:\"Source\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:62,columnNumber:329},this),\")\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:62,columnNumber:3},this),`\n`]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:62,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:\"Building JavaScript tooling with systems programming languages, like Go and Rust, was fairly niche until esbuild was released. In my opinion, esbuild sparked a wider interest in trying to make developer tools faster. Evan chose to use Go:\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:64,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.blockquote,{children:[`\n`,(0,r.jsxDEV)(e.p,{children:[\"The Rust version probably could be made to work at an equivalent speed with enough effort. But at a high level, Go was much more enjoyable to work with. This is a side project and it has to be fun for me to work on it. \\u2013 Evan, Creator of esbuild (\",(0,r.jsxDEV)(e.a,{href:\"https://news.ycombinator.com/item?id=22336284\",children:\"Source\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:66,columnNumber:250},this),\")\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:66,columnNumber:3},this),`\n`]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:66,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:\"Some argue Rust could perform better, but both could achieve Evan's original goal of influencing the community:\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:68,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.blockquote,{children:[`\n`,(0,r.jsxDEV)(e.p,{children:[\"Even with just basic optimization, Rust was able to outperform the hyper hand-tuned Go version. This is a huge testament to how easy it is to write efficient programs with Rust compared to the deep dive we had to do with Go. \\u2013 \",(0,r.jsxDEV)(e.a,{href:\"https://blog.discord.com/why-discord-is-switching-from-go-to-rust-a190bbca2b1f\",children:\"Discord\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:70,columnNumber:230},this)]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:70,columnNumber:3},this),`\n`]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:70,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.h3,{id:\"rome\",children:[(0,r.jsxDEV)(e.a,{className:\"anchor\",href:\"#rome\",children:(0,r.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\"},this)},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\"},this),\"Rome\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:72,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:[(0,r.jsxDEV)(e.a,{href:\"https://rome.tools/blog/2020/08/08/introducing-rome\",children:\"Rome\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:74,columnNumber:1},this),\", created in August 2020,\\xA0is a linter, compiler, bundler, test runner, and more, for JavaScript, TypeScript, HTML, JSON, Markdown, and CSS. They aim to replace and unify the entire frontend development toolchain. It's created by \",(0,r.jsxDEV)(e.a,{href:\"https://twitter.com/sebmck\",children:\"Sebastian\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:74,columnNumber:289},this),\", who also created Babel.\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:74,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:\"Why rewrite everything, then?\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:76,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.blockquote,{children:[`\n`,(0,r.jsxDEV)(e.p,{children:[\"Making the necessary modifications to Babel to allow for it to be a reliable base for other tools would have required changes to absolutely everything. The architecture is bound to the initial design choices I made in 2014 when I was learning about parsers, ASTs, and compilers. - Sebastian (\",(0,r.jsxDEV)(e.a,{href:\"https://rome.tools/blog/2020/08/08/introducing-rome\",children:\"Source\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:78,columnNumber:295},this),\")\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:78,columnNumber:3},this),`\n`]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:78,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:[\"Rome is currently written in TypeScript and runs on Node.js. But they're now working on \",(0,r.jsxDEV)(e.a,{href:\"https://rome.tools/blog/2021/09/21/rome-will-be-rewritten-in-rust\",children:\"rewriting in Rust\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:80,columnNumber:89},this),\" using RSLint parser and their own visitor system for AST traversal.\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:80,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.h3,{id:\"napi\",children:[(0,r.jsxDEV)(e.a,{className:\"anchor\",href:\"#napi\",children:(0,r.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\"},this)},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\"},this),\"NAPI\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:82,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:\"Rust's integration with Node.js is better than other low-level languages.\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:84,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:[(0,r.jsxDEV)(e.a,{href:\"https://napi.rs/\",children:\"napi-rs\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:86,columnNumber:1},this),\" allows you to build pre-compiled Node.js add-ons with Rust. It provides an out-of-the-box solution for cross-compilation and publishing native binaries to NPM, without needing \",(0,r.jsxDEV)(e.code,{children:\"node-gyp\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:86,columnNumber:205},this),\" or \",(0,r.jsxDEV)(e.code,{children:\"postinstall\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:86,columnNumber:219},this),\" scripts.\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:86,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:\"You can build a Rust module that can be called directly from Node.js, without needing to create a child process like esbuild.\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:88,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.h2,{id:\"rust--webassembly\",children:[(0,r.jsxDEV)(e.a,{className:\"anchor\",href:\"#rust--webassembly\",children:(0,r.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\"},this)},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\"},this),\"Rust + WebAssembly\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:90,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:[(0,r.jsxDEV)(e.a,{href:\"https://webassembly.org/docs/use-cases/\",children:\"WebAssembly\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:92,columnNumber:1},this),\"\\xA0\",(0,r.jsxDEV)(e.em,{children:[\"(\",(0,r.jsxDEV)(e.em,{children:\"WASM\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:92,columnNumber:58},this),\")\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:92,columnNumber:56},this),\"\\xA0is a portable low-level language that Rust can compile to. It runs in the browser, is interoperable with JavaScript, and is supported in all major modern browsers.\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:92,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.blockquote,{children:[`\n`,(0,r.jsxDEV)(e.p,{children:[\"WASM is definitely a lot faster than JS, but not quite native speed. In our tests, Parcel runs 10-20x slower when compiled to WASM than with native binaries. \\u2013 \",(0,r.jsxDEV)(e.a,{href:\"https://twitter.com/devongovett\",children:\"Devon Govett\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:94,columnNumber:163},this)]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:94,columnNumber:3},this),`\n`]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:94,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:[\"While WASM isn't the perfect solution yet, it \",(0,r.jsxDEV)(e.em,{children:\"can\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:96,columnNumber:47},this),\" help developers create extremely fast web experiences. The Rust team is \",(0,r.jsxDEV)(e.a,{href:\"https://www.rust-lang.org/what/wasm\",children:\"committed\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:96,columnNumber:125},this),\" to a high-quality and cutting-edge WASM implementation. For developers, this means you could have the performance advantages of Rust (vs. Go) while still compiling for the web (using WASM).\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:96,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:\"Some early libraries and frameworks in this space:\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:98,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.ul,{children:[`\n`,(0,r.jsxDEV)(e.li,{children:(0,r.jsxDEV)(e.a,{href:\"https://yew.rs/\",children:\"Yew\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:100,columnNumber:3},this)},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:100,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.li,{children:(0,r.jsxDEV)(e.a,{href:\"https://github.com/chinedufn/percy\",children:\"Percy\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:101,columnNumber:3},this)},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:101,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.li,{children:(0,r.jsxDEV)(e.a,{href:\"https://github.com/seed-rs/seed\",children:\"Seed\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:102,columnNumber:3},this)},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:102,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.li,{children:(0,r.jsxDEV)(e.a,{href:\"https://github.com/sycamore-rs/sycamore\",children:\"Sycamore\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:103,columnNumber:3},this)},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:103,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.li,{children:(0,r.jsxDEV)(e.a,{href:\"https://stork-search.net/\",children:\"Stork\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:104,columnNumber:3},this)},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:104,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:100,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:[\"These Rust-based web frameworks that compile to WASM aren't trying to replace JavaScript, but work alongside it. While we aren't there yet, it's interesting to see Rust coming after the web on both sides: \",(0,r.jsxDEV)(e.strong,{children:\"making existing JavaScript tooling faster\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:106,columnNumber:206},this),\" \",(0,r.jsxDEV)(e.em,{children:\"and\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:106,columnNumber:252},this),\" \",(0,r.jsxDEV)(e.strong,{children:[\"future-forward ideas for \",(0,r.jsxDEV)(e.a,{href:\"https://rustwasm.github.io/docs/book/introduction.html\",children:\"compiling to WASM\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:106,columnNumber:285},this)]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:106,columnNumber:258},this),\".\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:106,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:\"It's Rust all the way down.\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:108,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.h2,{id:\"why-not-rust\",children:[(0,r.jsxDEV)(e.a,{className:\"anchor\",href:\"#why-not-rust\",children:(0,r.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\"},this)},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\"},this),\"Why Not Rust?\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:110,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:\"Rust has a steep learning curve. It's a lower level of abstraction than what most web developers are used to.\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:112,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:[`Once you're on native code (through Rust, Go, Zig, or other low-level languages),\nthe algorithms and data structures are `,(0,r.jsxDEV)(e.a,{href:\"https://twitter.com/devongovett/status/1457945506332692482\",children:\"more important\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:115,columnNumber:40},this),\" than the language choice. It's not a silver bullet.\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:114,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.blockquote,{children:[`\n`,(0,r.jsxDEV)(e.p,{children:[\"Rust makes you think about dimensions of your code that matter tremendously for systems programming. It makes you think about how memory is shared or copied. It makes you think about real but unlikely corner cases and make sure that they're handled. It helps you write code that's incredibly efficient in every possible way. \\u2013 Tom MacWright (\",(0,r.jsxDEV)(e.a,{href:\"https://macwright.com/2021/01/15/rust.html\",children:\"Source\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:117,columnNumber:345},this),\")\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:117,columnNumber:3},this),`\n`]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:117,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:[\"Further, Rust's usage in the web community is still niche. It hasn't reached critical adoption. Even though learning Rust for JavaScript tooling will be a barrier to entry, interestingly developers would rather have a \",(0,r.jsxDEV)(e.a,{href:\"https://twitter.com/devongovett/status/1261379312898306048\",children:\"faster tool that's harder to contribute to\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:119,columnNumber:219},this),\". \",(0,r.jsxDEV)(e.a,{href:\"https://craigmod.com/essays/fast_software/\",children:\"Fast software wins\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:119,columnNumber:325},this),\".\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:119,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:[\"Currently, it's hard to find a Rust library or framework for your favorite services (things like working with authentication, databases, payments, and more). I do think that once Rust and WASM reach critical adoption, this will resolve itself. But not yet. \",(0,r.jsxDEV)(e.strong,{children:\"We need existing JavaScript tools to help us bridge the gap and incrementally adopt performance improvements\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:121,columnNumber:258},this),\".\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:121,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.h2,{id:\"the-future-of-javascript-tooling\",children:[(0,r.jsxDEV)(e.a,{className:\"anchor\",href:\"#the-future-of-javascript-tooling\",children:(0,r.jsxDEV)(e.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\"},this)},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\"},this),\"The Future of JavaScript Tooling\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:123,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:[\"I believe Rust is the future of JavaScript tooling. \",(0,r.jsxDEV)(e.a,{href:\"http://nextjs.org/12\",children:\"Next.js 12\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:125,columnNumber:53},this),\" started our transition to fully replace Babel (transpilation) and Terser (minification) with SWC and Rust. Why?\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:125,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.ul,{children:[`\n`,(0,r.jsxDEV)(e.li,{children:[(0,r.jsxDEV)(e.strong,{children:\"Extensibility:\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:127,columnNumber:3},this),\" SWC can be used as a Crate inside Next.js, without having to fork the library or workaround design constraints.\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:127,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.li,{children:[(0,r.jsxDEV)(e.strong,{children:\"Performance:\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:128,columnNumber:3},this),\" We were able to achieve ~3x faster Fast Refresh and ~5x faster builds in Next.js by switching to SWC, with more room for optimization still in progress.\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:128,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.li,{children:[(0,r.jsxDEV)(e.strong,{children:\"WebAssembly:\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:129,columnNumber:3},this),\" Rust's support for WASM is essential for supporting all possible platforms and taking Next.js development everywhere.\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:129,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.li,{children:[(0,r.jsxDEV)(e.strong,{children:\"Community:\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:130,columnNumber:3},this),\" The Rust community and ecosystem are amazing and only growing.\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:130,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:127,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:\"It's not just Next.js adopting SWC, either:\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:132,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.ul,{children:[`\n`,(0,r.jsxDEV)(e.li,{children:[(0,r.jsxDEV)(e.a,{href:\"https://deno.land/\",children:\"Deno's\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:134,columnNumber:3},this),\" linter, code formatter, and docs generator are \",(0,r.jsxDEV)(e.a,{href:\"https://twitter.com/devongovett/status/1369033422002389000\",children:\"built using SWC\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:134,columnNumber:79},this),\".\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:134,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.li,{children:[(0,r.jsxDEV)(e.a,{href:\"https://github.com/devongovett/dprint-node\",children:\"dprint\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:135,columnNumber:3},this),\", built on SWC, is a \",(0,r.jsxDEV)(e.a,{href:\"https://twitter.com/devongovett/status/1400138335721455617\",children:\"30x faster\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:135,columnNumber:76},this),\" code formatting replacement for Prettier.\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:135,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.li,{children:[(0,r.jsxDEV)(e.a,{href:\"https://parceljs.org/\",children:\"Parcel\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:136,columnNumber:3},this),\" improved overall build performance by \",(0,r.jsxDEV)(e.a,{href:\"https://v2.parceljs.org/blog/beta3/\",children:\"up to 10x\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:136,columnNumber:73},this),\" with SWC.\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:136,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:134,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.blockquote,{children:[`\n`,(0,r.jsxDEV)(e.p,{children:[\"Parcel uses SWC like a library. Before we used Babel's parser and custom transforms written in JS. Now, we use SWC's parser and \",(0,r.jsxDEV)(e.a,{href:\"https://github.com/parcel-bundler/parcel/tree/v2/packages/transformers/js/core/src\",children:\"custom transforms in Rust\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:138,columnNumber:131},this),\". This includes a full scope hoisting implementation, dependency collection, and more. It's similar in scope to how Deno built on top of SWC. \\u2013 \",(0,r.jsxDEV)(e.a,{href:\"https://twitter.com/devongovett\",children:\"Devon Govett\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:138,columnNumber:386},this)]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:138,columnNumber:3},this),`\n`]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:138,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:\"It's early days for Rust \\u2013 a few important pieces are still being figured out:\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:140,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.ul,{children:[`\n`,(0,r.jsxDEV)(e.li,{children:[(0,r.jsxDEV)(e.strong,{children:\"Plugins:\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:142,columnNumber:3},this),\" Writing plugins in Rust isn't as approachable for many JavaScript developers. At the same time, exposing a plugin system in JavaScript could negate performance gains. A definitive solution hasn't emerged yet. Ideally, the future combines both JavaScript and Rust. If you want to write a plugin with JavaScript, it's possible with a tradeoff for speed. Need more performance? Use the Rust plugin API.\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:142,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.li,{children:[(0,r.jsxDEV)(e.strong,{children:\"Bundling:\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:143,columnNumber:3},this),\" One interesting area of development is \",(0,r.jsxDEV)(e.code,{children:\"swcpack\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:143,columnNumber:56},this),\", which is SWC's replacement for Webpack. It's still under development but could be very promising.\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:143,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.li,{children:[(0,r.jsxDEV)(e.strong,{children:\"WebAssembly:\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:144,columnNumber:3},this),\" As mentioned above, the prospect of writing Rust and compiling to WASM is enticing, but there's still work to be done.\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:144,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:142,columnNumber:1},this),`\n`,(0,r.jsxDEV)(m,{emoji:\"\\u{1F4A1}\",children:(0,r.jsxDEV)(e.p,{children:[(0,r.jsxDEV)(e.strong,{children:\"Update 2023:\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:148,columnNumber:1},this),\" \",(0,r.jsxDEV)(e.a,{href:\"https://turbo.build/pack\",children:\"Turbopack\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:148,columnNumber:18},this),\" has been released, the Rust-powered successor to Webpack.\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:148,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:146,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:[\"Regardless, I'm confident Rust will continue to have a major impact on the JavaScript ecosystem for the next 1-2 years and into the future. Imagine a world where all of the build tools used in Next.js are written in Rust, giving you optimal performance. Then, Next.js could be distributed as a \",(0,r.jsxDEV)(e.a,{href:\"https://en.wikipedia.org/wiki/Static_build\",children:\"static binary\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:152,columnNumber:295},this),\" you'd download from NPM.\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:152,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:\"That's the world I want to live (and develop) in.\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:154,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.hr,{},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:156,columnNumber:1},this),`\n`,(0,r.jsxDEV)(e.p,{children:(0,r.jsxDEV)(e.em,{children:[\"Thanks to \",(0,r.jsxDEV)(e.a,{href:\"https://twitter.com/devongovett\",children:\"Devon Govett\"},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:158,columnNumber:12},this),\" for reviewing an early draft of this article.\"]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:158,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:158,columnNumber:1},this)]},void 0,!0,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\",lineNumber:1,columnNumber:1},this)}function gn(a={}){let{wrapper:e}=a.components||{};return e?(0,r.jsxDEV)(e,Object.assign({},a,{children:(0,r.jsxDEV)(Se,a,void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\"},this)}),void 0,!1,{fileName:\"/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx\"},this):Se(a)}var yn=gn;function Nn(a,e,m){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+a+\"` to be defined: you likely forgot to import, pass, or provide it.\"+(m?\"\\nIt\\u2019s referenced in your code at `\"+m+\"` in `/Users/26guo/playground/content/_mdx_bundler_entry_point-2d1b9068-ff72-4dd3-9cb5-fe4172004c28.mdx`\":\"\"))}return pn(xn);})();\n/*! Bundled license information:\n\nreact/cjs/react-jsx-dev-runtime.development.js:\n  (**\n   * @license React\n   * react-jsx-dev-runtime.development.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *)\n*/\n;return Component;"
  },
  "_id": "rust.mdx",
  "_raw": {
    "sourceFilePath": "rust.mdx",
    "sourceFileName": "rust.mdx",
    "sourceFileDir": ".",
    "contentType": "mdx",
    "flattenedPath": "rust"
  },
  "type": "Blog",
  "slug": "rust",
  "structuredData": {
    "@context": "https://schema.org",
    "@type": "BlogPosting",
    "headline": "Rust Is The Future of JavaScript Infrastructure",
    "datePublished": "Nov 11, 2021",
    "dateModified": "Nov 11, 2021",
    "description": "Why is Rust being used to replace parts of the JavaScript web ecosystem like minification (Terser), transpilation (Babel), formatting (Prettier), bundling (webpack), linting (ESLint), and more?",
    "image": "https://homescree.net/og?title=Rust Is The Future of JavaScript Infrastructure",
    "url": "https://homescree.net/blog/rust",
    "author": {
      "@type": "Person",
      "name": "Matthew Guo"
    }
  }
}