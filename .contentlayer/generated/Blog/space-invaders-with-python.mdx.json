{
  "title": "Creating a Space Invaders Clone with Python",
  "publishedAt": "2014-10-31",
  "summary": "Utilizing Python and PyGame to revive a classic.",
  "body": {
    "raw": "\nTo challenge my knowledge of [Python](https://www.python.org/) programming, I created a clone of the classic arcade game [Space Invaders](https://en.wikipedia.org/wiki/Space_Invaders) and added a modern twist. My goal for this project was to replicate the core gameplay of the original while enhancing the graphics and gameplay ever so slightly. I used a set of Python modules designed for writing games called [Pygame](https://www.pygame.org/news.html) to assist in the development. Prior to this project I had no experience using Pygame, so it was an exciting learning experience. You can view the full source code on my GitHub profile [here](https://github.com/leerob/Space_Invaders).\n\n---\n\n### Design\n\n<Image\n  alt={`Space Invaders`}\n  src={`/images/space-invaders-with-python/space-invaders.png`}\n  width={795}\n  height={620}\n/>\n\nIf you've ever played Space Invaders, you'll notice all the familiar elements - the ship, invaders, blockers, score, and lives. The classic game features five rows of eleven enemies. For my clone, I decided to only use ten per row so the screen didn't feel too congested. To spice up the visuals from the original arcade game, I gave the enemies different colors to signify their point values. Also, rather than using a static black background, I chose to use an image of space for some extra flair. The final change from the original is the ship. Paying homage to the design from [Galaga](https://en.wikipedia.org/wiki/Galaga), I transformed the ship into a stylish cruiser.\n\n### Gameplay\n\nSpace Invaders is a two-dimensional fixed shooter game in which the player controls a ship with lasers by moving it horizontally across the bottom of the screen and firing at descending aliens. The aim is to defeat five rows of ten aliens that move horizontally back and forth across the screen as they advance towards the bottom of the screen. The player defeats an alien, and earns points, by shooting it with the laser cannon. As more aliens are defeated, the aliens' movement and the game's music both speed up.\n\nThe aliens attempt to destroy the ship by firing at it while they approach the bottom of the screen. If they reach the bottom, the alien invasion is successful and the game ends. A special \"mystery ship\" will occasionally move across the top of the screen and award bonus points if destroyed. The ship is partially protected by several stationary defense bunkers that are gradually destroyed by projectiles from the aliens and player.\n\nI tried to keep the gameplay as similar to the original as I could. The enemies descend in the same fashion and animate between their two states to show movement. Instead of having the ship explode like in the original, I used a flickering death similar to other arcade games. I retained all the sounds from the original arcade version.\n\nYou can see an example of the gameplay [here.](https://www.youtube.com/watch?v=_2yUP3WMDRc) Enjoy ðŸŽ‰\n\n### Resources\n\n- [Python](https://www.python.org/)\n- [Pygame](https://www.pygame.org/news.html)\n- [Original Arcade Sounds](https://www.classicgaming.cc/classics/space-invaders//sounds)\n- [Sprite Sheet](https://orig02.deviantart.net/3ed1/f/2009/242/f/4/space_invaders_sprite_sheet_by_gooperblooper22.png)\n- [Space Invaders Wiki](https://en.wikipedia.org/wiki/Space_Invaders)\n",
    "code": "var Component=(()=>{var d=Object.create;var s=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var y=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),w=(n,e)=>{for(var i in e)s(n,i,{get:e[i],enumerable:!0})},o=(n,e,i,r)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let t of m(e))!f.call(n,t)&&t!==i&&s(n,t,{get:()=>e[t],enumerable:!(r=p(e,t))||r.enumerable});return n};var u=(n,e,i)=>(i=n!=null?d(g(n)):{},o(e||!n||!n.__esModule?s(i,\"default\",{value:n,enumerable:!0}):i,n)),v=n=>o(s({},\"__esModule\",{value:!0}),n);var l=y((P,h)=>{h.exports=_jsx_runtime});var _={};w(_,{default:()=>k,frontmatter:()=>b});var a=u(l()),b={title:\"Creating a Space Invaders Clone with Python\",publishedAt:\"2014-10-31\",summary:\"Utilizing Python and PyGame to revive a classic.\"};function c(n){let e=Object.assign({p:\"p\",a:\"a\",hr:\"hr\",h3:\"h3\",span:\"span\",ul:\"ul\",li:\"li\"},n.components),{Image:i}=e;return i||x(\"Image\",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(e.p,{children:[\"To challenge my knowledge of \",(0,a.jsx)(e.a,{href:\"https://www.python.org/\",children:\"Python\"}),\" programming, I created a clone of the classic arcade game \",(0,a.jsx)(e.a,{href:\"https://en.wikipedia.org/wiki/Space_Invaders\",children:\"Space Invaders\"}),\" and added a modern twist. My goal for this project was to replicate the core gameplay of the original while enhancing the graphics and gameplay ever so slightly. I used a set of Python modules designed for writing games called \",(0,a.jsx)(e.a,{href:\"https://www.pygame.org/news.html\",children:\"Pygame\"}),\" to assist in the development. Prior to this project I had no experience using Pygame, so it was an exciting learning experience. You can view the full source code on my GitHub profile \",(0,a.jsx)(e.a,{href:\"https://github.com/leerob/Space_Invaders\",children:\"here\"}),\".\"]}),`\n`,(0,a.jsx)(e.hr,{}),`\n`,(0,a.jsxs)(e.h3,{id:\"design\",children:[(0,a.jsx)(e.a,{className:\"anchor\",href:\"#design\",children:(0,a.jsx)(e.span,{className:\"icon icon-link\"})}),\"Design\"]}),`\n`,(0,a.jsx)(i,{alt:\"Space Invaders\",src:\"/images/space-invaders-with-python/space-invaders.png\",width:795,height:620}),`\n`,(0,a.jsxs)(e.p,{children:[\"If you've ever played Space Invaders, you'll notice all the familiar elements - the ship, invaders, blockers, score, and lives. The classic game features five rows of eleven enemies. For my clone, I decided to only use ten per row so the screen didn't feel too congested. To spice up the visuals from the original arcade game, I gave the enemies different colors to signify their point values. Also, rather than using a static black background, I chose to use an image of space for some extra flair. The final change from the original is the ship. Paying homage to the design from \",(0,a.jsx)(e.a,{href:\"https://en.wikipedia.org/wiki/Galaga\",children:\"Galaga\"}),\", I transformed the ship into a stylish cruiser.\"]}),`\n`,(0,a.jsxs)(e.h3,{id:\"gameplay\",children:[(0,a.jsx)(e.a,{className:\"anchor\",href:\"#gameplay\",children:(0,a.jsx)(e.span,{className:\"icon icon-link\"})}),\"Gameplay\"]}),`\n`,(0,a.jsx)(e.p,{children:\"Space Invaders is a two-dimensional fixed shooter game in which the player controls a ship with lasers by moving it horizontally across the bottom of the screen and firing at descending aliens. The aim is to defeat five rows of ten aliens that move horizontally back and forth across the screen as they advance towards the bottom of the screen. The player defeats an alien, and earns points, by shooting it with the laser cannon. As more aliens are defeated, the aliens' movement and the game's music both speed up.\"}),`\n`,(0,a.jsx)(e.p,{children:'The aliens attempt to destroy the ship by firing at it while they approach the bottom of the screen. If they reach the bottom, the alien invasion is successful and the game ends. A special \"mystery ship\" will occasionally move across the top of the screen and award bonus points if destroyed. The ship is partially protected by several stationary defense bunkers that are gradually destroyed by projectiles from the aliens and player.'}),`\n`,(0,a.jsx)(e.p,{children:\"I tried to keep the gameplay as similar to the original as I could. The enemies descend in the same fashion and animate between their two states to show movement. Instead of having the ship explode like in the original, I used a flickering death similar to other arcade games. I retained all the sounds from the original arcade version.\"}),`\n`,(0,a.jsxs)(e.p,{children:[\"You can see an example of the gameplay \",(0,a.jsx)(e.a,{href:\"https://www.youtube.com/watch?v=_2yUP3WMDRc\",children:\"here.\"}),\" Enjoy \\u{1F389}\"]}),`\n`,(0,a.jsxs)(e.h3,{id:\"resources\",children:[(0,a.jsx)(e.a,{className:\"anchor\",href:\"#resources\",children:(0,a.jsx)(e.span,{className:\"icon icon-link\"})}),\"Resources\"]}),`\n`,(0,a.jsxs)(e.ul,{children:[`\n`,(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:\"https://www.python.org/\",children:\"Python\"})}),`\n`,(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:\"https://www.pygame.org/news.html\",children:\"Pygame\"})}),`\n`,(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:\"https://www.classicgaming.cc/classics/space-invaders//sounds\",children:\"Original Arcade Sounds\"})}),`\n`,(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:\"https://orig02.deviantart.net/3ed1/f/2009/242/f/4/space_invaders_sprite_sheet_by_gooperblooper22.png\",children:\"Sprite Sheet\"})}),`\n`,(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:\"https://en.wikipedia.org/wiki/Space_Invaders\",children:\"Space Invaders Wiki\"})}),`\n`]})]})}function I(n={}){let{wrapper:e}=n.components||{};return e?(0,a.jsx)(e,Object.assign({},n,{children:(0,a.jsx)(c,n)})):c(n)}var k=I;function x(n,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return v(_);})();\n;return Component;"
  },
  "_id": "space-invaders-with-python.mdx",
  "_raw": {
    "sourceFilePath": "space-invaders-with-python.mdx",
    "sourceFileName": "space-invaders-with-python.mdx",
    "sourceFileDir": ".",
    "contentType": "mdx",
    "flattenedPath": "space-invaders-with-python"
  },
  "type": "Blog",
  "slug": "space-invaders-with-python",
  "tweetIds": [],
  "structuredData": {
    "@context": "https://schema.org",
    "@type": "BlogPosting",
    "headline": "Creating a Space Invaders Clone with Python",
    "datePublished": "2014-10-31",
    "dateModified": "2014-10-31",
    "description": "Utilizing Python and PyGame to revive a classic.",
    "image": "https://homescree.net/og?title=Creating a Space Invaders Clone with Python",
    "url": "https://homescree.net/blog/space-invaders-with-python",
    "author": {
      "@type": "Person",
      "name": "Matthew Guo"
    }
  }
}